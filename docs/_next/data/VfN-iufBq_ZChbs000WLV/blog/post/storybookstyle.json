{"pageProps":{"output":{"key":"storybookstyle","title":"Loader conflict in Storybook Webpack configuration","time":1644019200000,"category":"Computer","content":"<p><a target=\"_blank\" rel=\"noopener noreferrer\"  href=\"https://storybook.js.org/\">Storybook</a>을 사용할 때 Storybook의 기본 Webpack 세팅에 나의 세팅을 합쳐서 사용하는 경우가 있다.</p>\n<p>We sometimes merge our Webpack configuration to the default Storybook Webpack configuration when we use <a target=\"_blank\" rel=\"noopener noreferrer\"  href=\"https://storybook.js.org/\">Storybook</a>.</p>\n<pre><code class=\"language-JavaScript\"><span class=\"hljs\"><span class=\"hljs-comment\">// ex. .storybook/main.js</span>\n\n<span class=\"hljs-keyword\">const</span> createOurConfig = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../webpack.config.js&#x27;</span>);\n\n<span class=\"hljs-keyword\">const</span> ourConfig = <span class=\"hljs-title function_\">createOurConfig</span>();\n\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    ...,\n    <span class=\"hljs-attr\">webpackFinal</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">config</span> =&gt;</span> {\n        config.<span class=\"hljs-property\">resolve</span> = {\n            ...config.<span class=\"hljs-property\">resolve</span>,\n            ...ourConfig.<span class=\"hljs-property\">resolve</span>\n        };\n\n        config.<span class=\"hljs-property\">module</span>.<span class=\"hljs-property\">rules</span> = [\n            ...config.<span class=\"hljs-property\">module</span>.<span class=\"hljs-property\">rules</span>,\n            ...ourConfig.<span class=\"hljs-property\">module</span>.<span class=\"hljs-property\">rules</span>\n        ];\n\n        <span class=\"hljs-keyword\">return</span> config;\n    }\n};</span>\n</code></pre>\n<p>이 때 기본 Webpack 세팅에 css-loader 등의 스타일 세팅을 합치면 빌드 시 에러가 나는 경우가 있다.</p>\n<p>이는 기본 Webpack 세팅에 이미 스타일 관련 loader들이 들어있어 이미 변환이 된 결과물에 나의 loader들이 적용되기 때문이다.\n이 문제는 아래와 같이 기본 loader들을 제거해주고 (ex. 정규 표현식에 css가 들어가는 것들만 제외) 나의 loader들을 쓰도록 하는 방법으로 해결 가능하다.</p>\n<p>If we merge our style configuration such as css-loader, we sometimes get the errors.</p>\n<p>The reasons is Storybook&#39;s default Webpack configuration already defines the loaders related to style.\nWe can solve that problem by excluding the those loaders (ex. Exclude the loaders whose regex includes &#39;css&#39;) and using our loaders instead.</p>\n<pre><code class=\"language-JavaScript\"><span class=\"hljs\"><span class=\"hljs-comment\">// ex. .storybook/main.js</span>\n\n<span class=\"hljs-keyword\">const</span> createOurConfig = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../webpack.config.js&#x27;</span>);\n\n<span class=\"hljs-keyword\">const</span> ourConfig = <span class=\"hljs-title function_\">createOurConfig</span>();\n\n<span class=\"hljs-variable language_\">module</span>.<span class=\"hljs-property\">exports</span> = {\n    ...,\n    <span class=\"hljs-attr\">webpackFinal</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">config</span> =&gt;</span> {\n        config.<span class=\"hljs-property\">resolve</span> = {\n            ...config.<span class=\"hljs-property\">resolve</span>,\n            ...ourConfig.<span class=\"hljs-property\">resolve</span>\n        };\n\n        config.<span class=\"hljs-property\">module</span>.<span class=\"hljs-property\">rules</span> = [\n            <span class=\"hljs-comment\">// Exclude default style rules.</span>\n            ...config.<span class=\"hljs-property\">module</span>.<span class=\"hljs-property\">rules</span>.<span class=\"hljs-title function_\">filter</span>(<span class=\"hljs-function\"><span class=\"hljs-params\">rule</span> =&gt;</span> !rule.<span class=\"hljs-property\">test</span>.<span class=\"hljs-title function_\">toString</span>().<span class=\"hljs-title function_\">includes</span>(<span class=\"hljs-string\">&#x27;css&#x27;</span>)),\n            ...ourConfig.<span class=\"hljs-property\">module</span>.<span class=\"hljs-property\">rules</span>\n        ];\n\n        <span class=\"hljs-keyword\">return</span> config;\n    }\n};</span>\n</code></pre>\n"}},"__N_SSG":true}