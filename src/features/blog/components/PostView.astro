---
import type { MDXInstance } from "astro";

import Header from "@/shared/components/Header.astro";
import { formatDate } from "@/shared/utils/StringUtils";
import AppLayout from "@/shared/components/AppLayout.astro";
import PostComments from "@/features/blog/components/PostComments.astro";
import MarkdownView from "@/shared/components/MarkdownView.astro";

const { id: postID } = Astro.params;

const postModules = import.meta.glob("../data/*.mdx");
const postModule = Object.entries(postModules).find(([path]) => path.toLowerCase().endsWith(`${postID}.mdx`))![1];

const { Content, frontmatter } = (await postModule()) as MDXInstance<Record<string, string>>;
---

<AppLayout title={frontmatter.title} description={frontmatter.title}>
  <Header titleText="Blog">Blog</Header>
  <div class="border-gray mb-4 w-full border-b-2 border-dashed pb-4">
    <h2 class="m-0 p-0 text-xl">{frontmatter.title}</h2>
    <div class="text-gray">{formatDate(new Date(frontmatter.date))}</div>
  </div>
  <div
    class="app-post-content [&_table]:border-gray [&_td]:border-gray [&_th]:border-gray mb-2 text-base break-all [&_a]:cursor-pointer [&_a]:font-normal [&_code]:font-mono [&_h1]:my-4 [&_h1]:text-xl [&_h1]:font-bold [&_h2]:my-4 [&_h2]:text-lg [&_h2]:font-semibold [&_h3]:my-4 [&_h3]:text-base [&_li]:list-disc [&_p]:my-4 [&_pre]:my-4 [&_pre]:p-3 [&_pre]:text-sm [&_table]:border-collapse [&_table]:border-2 [&_table]:border-solid [&_td]:border-2 [&_td]:border-solid [&_th]:border-2 [&_th]:border-solid [&_th]:p-[8px] [&_ul]:pl-6"
  >
    <MarkdownView Content={Content} />
  </div>
  <div class="border-gray my-4 w-full border-b-2 border-dashed"></div>
  <PostComments />
</AppLayout>

<style>
  .app-post-content :global(pre) :global(code) {
    all: unset;
  }
</style>
