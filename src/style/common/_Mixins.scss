// ===============================================
// Mixins for setting the fonts.

@mixin defaultFont {
    font-family: 'Noto Sans KR', sans-serif;
}

@mixin codeFont {
    font-family: 'Nanum Gothic Coding', monospace;
}

// ===============================================
// Mixins for responsive layout.

@mixin wideScreen {
    @media (min-width: 769px) {
        @content;
    }
}

// ===============================================
// Mixins for the page and the page's background.

@mixin page {
    position: relative;

    width: 100%;
    height: 100%;
    flex: 1;
}

@mixin background {
    position: absolute;

    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

// ===============================================
// Mixins for giving a neon effect on the element.

@mixin neonSVG($darkColor, $lightColor, $startSize: 2px, $endSize: 4px) {
    filter: drop-shadow(0 0 $startSize $darkColor) drop-shadow(0 0 $endSize $lightColor);
}

@mixin neonBorder($darkColor, $lightColor, $startSize: 2px, $endSize: 4px) {
    box-shadow: 0 0 $startSize $darkColor, 0 0 $endSize $lightColor;
}

// ===============================================
// Mixins for creating a flex-based grid.

@mixin grid($cellWidth, $cellHeight, $maxDimensionX) {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-content: flex-start;
    justify-content: center;

    max-width: $cellWidth * $maxDimensionX;
}

@mixin realCell($cellWidth, $cellHeight) {
    width: $cellWidth;
    height: $cellHeight;
}

@mixin fakeCell($cellWidth, $cellHeight) {
    width: $cellWidth;
    height: 0;
}

// ===============================================
// Mixins for giving a typewriter effect on the element.

@keyframes typewriterAnimation {
    to {
        background-size: 3000px;
    }
}

@mixin typewriter($color, $backgroundColor, $duration: 10s) {
    color: transparent;
    background: linear-gradient($color 0 0) 0 0;
    background-size: 0;
    background-clip: text;
    background-repeat: no-repeat;

    animation-name: typewriterAnimation;
    animation-duration: $duration;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}
