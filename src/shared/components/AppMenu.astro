---
import AppMenuItem from "@/shared/components/AppMenuItem.astro";
import AppMenuSeparator from "@/shared/components/AppMenuSeparator.astro";
import type { Locale } from "@/shared/constants/I18n";
import allRoutes from "@/shared/constants/Routes";
import { getLocale } from "@/shared/utils/LocaleUtils";

const navItems: Array<{ name: string; url: string }> = [
  { name: "Home", url: allRoutes.home.url },
  { name: "Projects", url: allRoutes.projects.url },
  { name: "Musics", url: allRoutes.musics.url },
  { name: "Art", url: allRoutes.art.url },
  { name: "Blog", url: allRoutes.blog.url },
];

const localeItems: Record<Locale, { name: string; nextLocale: Locale }> = {
  ko: { name: "English", nextLocale: "en" },
  en: { name: "한국어", nextLocale: "ko" },
};

const length = 20;
const locale = getLocale(Astro.params);
---

<div class="relative">
  <button id="app-menu-trigger" class="hover:text-yellow cursor-pointer font-mono text-base">{"<Menu/>"}</button>
  <div
    id="app-menu"
    class={"bg-background text-primary absolute opacity-0 right-0 z-10 origin-top-right scale-0 font-mono text-base transition-[transform_200ms,opacity_150ms]"}
  >
    <AppMenuSeparator length={length} />
    {
      navItems.map(item => (
        <AppMenuItem length={length} type="link" href={`/${locale}${item.url}`}>
          {`<${item.name}/>`}
        </AppMenuItem>
      ))
    }
    <AppMenuSeparator length={length} />
    <AppMenuItem
      id="app-menuitem-locale"
      data-next-locale={localeItems[locale].nextLocale}
      length={length}
      type="button"
    >
      {`${localeItems[locale].name}()`}
    </AppMenuItem>
    <AppMenuSeparator length={length} />
    <AppMenuItem length={length} type="link" href="https://mypage-v1.vercel.app/">v1()</AppMenuItem>
    <AppMenuItem length={length} type="link" href="https://mypage-v2.vercel.app/">v2()</AppMenuItem>
    <AppMenuSeparator length={length} />
  </div>
</div>

<!-- Handle menu. -->
<script>
  const triggerElement = document.querySelector<HTMLElement>("#app-menu-trigger")!;
  const menuElement = document.querySelector<HTMLElement>("#app-menu")!;
  let isOpen = false;

  function openMenu(open: boolean) {
    isOpen = open;
    menuElement.style.scale = isOpen ? "1" : "0";
    menuElement.style.opacity = isOpen ? "1" : "0";
  }

  triggerElement.addEventListener("click", event => {
    event.stopPropagation();
    openMenu(!isOpen);
  });

  window.addEventListener("click", event => {
    if (isOpen && !menuElement.contains(event.target as HTMLElement | null)) {
      openMenu(false);
    }
  });

  openMenu(false);
</script>

<!-- Handle locale button. -->
<script>
  import type { Locale } from "@/shared/constants/I18n";
  import { setLocale } from "@/shared/utils/LocaleUtils";

  const localeElement = document.querySelector<HTMLElement>("#app-menuitem-locale")!;

  localeElement.addEventListener("click", () => {
    setLocale(localeElement.dataset.nextLocale as Locale);
  });
</script>
